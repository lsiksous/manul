#+TITLE: Hadoop Labs Toolbox
#+AUTHOR: Laurent Siksous


#+attr_html: :width 100px
#+attr_latex: :width 100px
[[file:media/logo.png]]

* Introduction

** Project Overview:
   The aim of our project is to facilitate the creation of lab environments for
   a learning company that specializes in teaching Hadoop courses. These courses
   are designed to provide students with hands-on experience in working with
   Hadoop distributions, including OSS, Cloudera, and Mapr. Our toolbox offers
   easy deployment of these Hadoop distributions using various methods, allowing
   students to explore different deployment and configuration management
   techniques.

** Toolbox Features:
   - *Hadoop Distributions:* Our toolbox supports the deployment of three main
     Hadoop distributions: OSS, Cloudera, and Mapr. This variety allows students
     to gain exposure to different Hadoop platforms and understand their unique
     features and capabilities.
   - *Deployment Methods:* We provide multiple deployment methods to cater to
     different learning preferences and scenarios:
     - *Docker:* Students can deploy Hadoop environments using Docker containers,
       offering a lightweight and portable solution.
     - *Vagrant:* Virtual environments can be created using Vagrant, allowing
       students to set up Hadoop clusters on their local machines with ease.
     - *Terraform:* Infrastructure as Code (IaC) enthusiasts can utilize Terraform
       to provision Hadoop clusters on cloud platforms or virtualization
       providers.
     - *Ansible:* Especially focused on Ansible, our toolbox emphasizes
       configuration management techniques, enabling students to automate the
       setup and management of Hadoop environments.
   - *Integrated Curriculum:* The courses offered by the learning company
     include comprehensive coverage of Hadoop concepts and hands-on labs using
     our toolbox. Students not only learn about Hadoop but also gain practical
     experience in deploying and managing Hadoop clusters using
     industry-standard tools like Docker, Vagrant, Terraform, and Ansible.

** Benefits:
   - *Hands-on Learning:* By providing easy access to deployable Hadoop
     environments, our project enhances the hands-on learning experience for
     students, allowing them to apply theoretical concepts in real-world
     scenarios.
   - *Exposure to Multiple Platforms:* Students get exposure to a variety of
     Hadoop distributions, enabling them to understand the strengths and
     weaknesses of each platform and make informed decisions in their future
     career paths.
   - *Comprehensive Curriculum:* Our integrated curriculum ensures that students
     receive a holistic learning experience, covering both theoretical concepts
     and practical implementation using state-of-the-art tools.
   - *Git Collaboration:* We encourage students to contribute with git to this
     project so that they can learn Git workflows, including working in teams
     with branches and pull requests. Understanding Git collaboration is
     essential for effective teamwork and version control in software
     development projects. Learning these skills will prepare students for
     collaborative work environments and enhance their employability in the
     industry.


** Future Enhancements:
   - *Enhanced Automation:* Continuously improving our automation capabilities, we
     aim to streamline the deployment and management processes further, reducing
     setup time and effort for students and instructors alike.


[[file:media/topo.png]]

* Installation
** Requirements

*** Development Environment:
   - Operating System: Windows 10
     - System Type: 64-bit operating system, x64-based processor
   - Processor: Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz (2 processors)
   - Installed RAM: 60.0 GB

*** Virtualization Setup:
   - VirtualBox Version: 7.0
     - RAM Allocation: 60 GB
     - Processor Allocation: 48 processors

*** Software Dependencies:
   - Vagrant: Version 2.4.1 for Windows

*** Virtual Machine Requirements:
   - Operating System: Ubuntu 22.04 (VirtualBox Appliance)
     - RAM: At least 24 GB
     - CPUs: At least 12
     - Software: Docker installed (Version 20.10.21)

*** Important Note:
   - No WSL2: Windows Subsystem for Linux 2 (WSL2) should not be used.

** Setup

     #+BEGIN_SRC shell
     git clone https://github.com/lsiksous/manul.io.git
     cd manul.io
     #+END_SRC

** Terraform

You can choose to deploy your cluster to the cloud (Azure)

*** Initialisation

#+begin_src shell
cd terraform && terraform init && terraform plan -out main.tfplan
#+end_src

*** Run terraform apply to apply the execution plan

  #+begin_src shell
terraform apply main.tfplan
  #+end_src

*** Verify the results

  #+begin_src shell
# Get the Azure resource group name
resource_group_name=$(terraform output -raw resource_group_name)

# Get the virtual network name
virtual_network_name=$(terraform output -raw virtual_network_name)

# Use az network vnet show to display the details of the newly created virtual network
az network vnet show \
    --resource-group $resource_group_name \
    --name $virtual_network_name
  #+end_src

*** Clean up resources

#+begin_src shell
# Run terraform plan and specify the destroy flag
terraform plan -destroy -out main.destroy.tfplan

# Run terraform apply to apply the execution plan
terraform apply main.destroy.tfplan
#+end_src

* Usage

* Configuration

* Contribution

* License

* Acknowledgments
