#+TITLE: Manul: Empowering Hadoop Learning with Hands-on Environments
#+AUTHOR: Laurent Siksous


#+BEGIN_QUOTE
"Embrace curiosity, explore relentlessly, and let your instincts guide you like
the agile Manul through the rugged landscapes of knowledge."
#+END_QUOTE

#+ATTR_ORG: :width 100
[[file:media/logo.png]]

#+BEGIN_QUOTE
The manul is a species of wild cat known as the Pallas's cat (Otocolobus
manul). The Pallas's cat is native to the grasslands and montane steppes of
Central Asia, including regions of Mongolia, China, Russia, and parts of Central
Asia. It's known for its distinctive appearance, with a stocky build, long fur,
flat face, and expressive eyes.

The Pallas's cat is well-adapted to its harsh, cold environment, with its dense
fur providing insulation against the cold and its low metabolism enabling it to
conserve energy. It's primarily a solitary and nocturnal hunter, preying on
small mammals, birds, and insects.

The Pallas's cat is also known by other names, including the manul, the steppe
cat, and the rock wildcat. It's considered a near-threatened species due to
habitat loss, degradation, and hunting pressures. Conservation efforts are
underway to protect its habitat and populations. 
#+END_QUOTE

* Introduction

** Project Overview
   The aim of our project is to facilitate the creation of lab environments for
   a learning company that specializes in teaching Big Data courses. These courses
   are designed to provide students with hands-on experience in working with
   Hadoop distributions, including OSS, Cloudera, and MapR. Our toolbox offers
   easy deployment of these Hadoop distributions using various methods, allowing
   students to explore different deployment and configuration management
   techniques.


[[file:media/topo.png]]

   
** Toolbox Features
   - *Hadoop Distributions:* Our toolbox supports the deployment of three main
     Hadoop distributions: OSS, Cloudera, and MapR. This variety allows students
     to gain exposure to different Hadoop platforms and understand their unique
     features and capabilities.
   - *Deployment Methods:* We provide multiple deployment methods to cater to
     different learning preferences and scenarios:
     - *Docker:* Students can deploy Hadoop environments using Docker containers,
       offering a lightweight and portable solution.
     - *Vagrant:* Virtual environments can be created using Vagrant, allowing
       students to set up Hadoop clusters on their local machines with ease.
     - *Terraform:* Infrastructure as Code (IaC) enthusiasts can utilize Terraform
       to provision Hadoop clusters on cloud platforms or virtualization
       providers.
     - *Ansible:* Especially focused on Ansible, our toolbox emphasizes
       configuration management techniques, enabling students to automate the
       setup and management of Hadoop environments.
   - *Integrated Curriculum:* The courses offered by the learning company
     include comprehensive coverage of Hadoop concepts and hands-on labs using
     our toolbox. Students not only learn about Hadoop but also gain practical
     experience in deploying and managing Hadoop clusters using
     industry-standard tools like Docker, Vagrant, Terraform, and Ansible.

** Benefits
   - *Hands-on Learning:* By providing easy access to deployable Hadoop
     environments, our project enhances the hands-on learning experience for
     students, allowing them to apply theoretical concepts in real-world
     scenarios.
   - *Exposure to Multiple Platforms:* Students get exposure to a variety of
     Hadoop distributions, enabling them to understand the strengths and
     weaknesses of each platform and make informed decisions in their future
     career paths.
   - *Comprehensive Curriculum:* Our integrated curriculum ensures that students
     receive a holistic learning experience, covering both theoretical concepts
     and practical implementation using state-of-the-art tools.
   - *Git Collaboration:* We encourage students to contribute with git to this
     project so that they can learn Git workflows, including working in teams
     with branches and pull requests. Understanding Git collaboration is
     essential for effective teamwork and version control in software
     development projects. Learning these skills will prepare students for
     collaborative work environments and enhance their employability in the
     industry.


** Future Enhancements
   - *Enhanced Automation:* Continuously improving our automation capabilities, we
     aim to streamline the deployment and management processes further, reducing
     setup time and effort for students and instructors alike.

* Installation
** Requirements

*** Development Environment
   - Operating System: Windows 10
     - System Type: 64-bit operating system, x64-based processor
   - Processor: Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz (2 processors)
   - Installed RAM: 60.0 GB
   - Hard disk: 512 Gb


*** Virtualization Setup
   - VirtualBox Version: 7.0
     - RAM Allocation: 60 GB
     - Processor Allocation: 48 processors

*** Software Dependencies
   - Vagrant: Version 2.4.1 for Windows

*** Virtual Machine Requirements
   - Operating System: Ubuntu 22.04 (VirtualBox Appliance)
     - RAM: At least 24 GB
     - CPUs: At least 12
     - Software: Docker installed (Version 20.10.21)
       
*** Licensing
   - CDP Private Cloud Base free trial:
     [[https://www.cloudera.com/downloads/cdp-private-cloud-trial/cdp-private-cloud-base-trial.html]]
   - HPE Ezmeral Data Fabric free trial: [[https://docs.ezmeral.hpe.com/datafabric/76/licensing/obtaining_a_license.html]]

*** Important Note
   - *Windows Subsystem for Linux 2 (WSL2) should not be used* because of
     compatibility issues with virtualbox and Windows 10.
   - For this reason, it is recommended to disable Hyper-V:

     #+begin_src shell
     bcdedit /set hypervisorlaunchtype off
     #+end_src

** Setup (Layer 1)

- Clone this repository on your workstation:
  
     #+BEGIN_SRC shell
     git clone https://github.com/lsiksous/manul.git
     cd manul
     #+END_SRC

*** Vagrant

You can choose to deploy your cluster on the windows host provided by the
learning company.

*** Docker

You can choose to deploy your cluster locally on a unix-like system (including a
pre-provisionned ubuntu virtual box running on the windows host provided by the
learning company).


*** Terraform

You can choose to deploy your cluster to the cloud (Azure).

**** Initialisation

#+begin_src shell
cd terraform && terraform init && terraform plan -out main.tfplan
#+end_src

**** Run terraform apply to apply the execution plan

  #+begin_src shell
  terraform apply main.tfplan
  #+end_src

**** Verify the results

  #+begin_src shell
# Get the Azure resource group name
resource_group_name=$(terraform output -raw resource_group_name)

# Get the virtual network name
virtual_network_name=$(terraform output -raw virtual_network_name)

# Use az network vnet show to display the details of the newly created virtual network
az network vnet show \
    --resource-group $resource_group_name \
    --name $virtual_network_name
  #+end_src

**** Clean up resources

#+begin_src shell
# Run terraform plan and specify the destroy flag
terraform plan -destroy -out main.destroy.tfplan

# Run terraform apply to apply the execution plan
terraform apply main.destroy.tfplan
#+end_src

* Usage

* Configuration

* Contribution

- [[https://github.com/fall5443][Khoudia Fall]] (@fall5443)


* License

This project is licensed under the [[file:LICENSE][GNU General Public License v3.0]].

* Acknowledgments

I would like to extend my gratitude to the following individuals:

- [[https://www.linkedin.com/in/dr-heni-bouhamed-6056669a/][Dr. Heni Bouhamed]]: A great mind and inspiration in my Hadoop learning journey. I hope
  to include his own hadoop distribution in this project very soon : https://zettaspark.io
- [[https://www.linkedin.com/in/ben-afia-salem-08216b24/][Salem Ben Afia]]: For his great sense of humour, talent and vision.
